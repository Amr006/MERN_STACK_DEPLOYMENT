mv C:\Users\10\Desktop\Amr006_key.pem ~\.ssh\

icacls "C:\Users\10\.ssh\Amr006_key.pem" /inheritance:r /grant:r "%USERNAME%:R"  == chmod 400 Amr006_key.pem for this (WARNING: UNPROTECTED PRIVATE KEY FILE!)

cat /etc/os-release (to know the version of the ubunto)


sudo apt update && sudo apt upgrade -y 

sudo apt-get install nginx -y

sudo systemctl enable nginx

sudo systemctl status nginx

cd /etc/nginx/sites-available/

sudo cp default myserver

sudo vim myserver

:%d to delete the whole vim 

shift i to insert in the vim

nginx config
server {
        listen 80;
        listen [::]:80;
        root /home/Convivial/Deploy/client/build;
        index index.html index.htm index.nginx-debian.html;
        server_name www.dagagino.com.om dagagino.com.om;
        location / {
                    try_files $uri /index.html;
                   }
        location /api {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
           }
}

server {                                                                                       
        listen 80;                                                                             
        listen [::]:80;                                                                        
        root /home/dagagino/client/build;                                                      
        index index.html index.htm index.nginx-debian.html;                                    
        server_name dagagino.com.om wwww.dagagino.com.om;                                      
        location / {                                                                           
                try_files $uri /index.html;                                                    
        }      location /api {                                                                 
                proxy_pass http://localhost:3000;                                              
                proxy_http_version 1.1;                                                        
                proxy_set_header Upgrade $http_upgrade;                                        
                proxy_set_header Connection 'upgrade';                                         
                proxy_set_header Host $host;                                                   
                proxy_set_header X-Real-IP $remote_addr;                                       
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;                   
                proxy_cache_bypass $http_upgrade;                                              
        }                                                                                      
        resolver 1.1.1.1 1.0.0.1 valid=300s;                                                   
        resolver_timeout 5s;                                                                   
        # Cloudflare settings                                                                  
            set_real_ip_from 173.245.48.0/20;                                                  
            set_real_ip_from 103.21.244.0/22;                                                  
            set_real_ip_from 103.22.200.0/22;                                                  
            set_real_ip_from 103.31.4.0/22;                                                    
            set_real_ip_from 141.101.64.0/18;                                                  
            set_real_ip_from 108.162.192.0/18;                                                 
            set_real_ip_from 190.93.240.0/20;                                                  
            set_real_ip_from 188.114.96.0/20;                                                  
            set_real_ip_from 197.234.240.0/22;                                                 
            set_real_ip_from 198.41.128.0/17;                                                  
            set_real_ip_from 162.158.0.0/15;                                                   
            set_real_ip_from 104.16.0.0/13;                                                    
            set_real_ip_from 104.24.0.0/14;                                                    
            set_real_ip_from 172.64.0.0/13;                                                    
            set_real_ip_from 131.0.72.0/22;                                                    
        real_ip_header CF-Connecting-IP;                                                       
        real_ip_recursive on;                                                                  
}                                                                                              
                                                                                               
:wq to save 

:qa to exit 

sudo ln -s /etc/nginx/sites-available/myserver /etc/nginx/sites-enabled/    (like short cut in windows)

sudo service nginx restart  do this command after any change in the config of the nginx

install npm (apt install npm)

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash   to download nvm (to download the specific version of nodejs on ubunto)

Close and reopen your terminal to start using nvm or run the following to use it now:

exit

connect again

ssh -i C:\Users\10\.ssh\Amr006_key.pem azureuser@20.46.54.15

nvm install 19.8.1  or the version of your nodejs server

node -v

stand in the ~ and install -> pm2  npm install pm2 --location=global
or
sudo npm install -g pm2
or
npm install -g pm2


to download mongodb server

wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add

echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list

(OR)

this to download mongodb 
sudo apt-get purge mongodb-org*
sudo apt-get install mongodb
sudo apt-get update

(OR)
https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/




sudo systemctl start mongod

sudo systemctl enable mongod.service

sudo chown -R mongodb:mongodb /var/lib/mongodb

sudo chown mongodb:mongodb /tmp/mongodb-27017.sock

sudo service mongod restart

sudo systemctl status mongod

create folder that has two folders server and the client and the client the build of the reactjs 

scp -i C:\Users\10\.ssh\Amr006_key.pem -r .\BrainStorm006\ azureuser@20.174.9.91:/home/azureuser
or
scp -i C:\Users\10\.ssh\id_rsa -r .\Deploy\ root@195.35.25.203:/home/Expo


pm2 start server.js -i max

pm2 startup

take the command given and past it again 

pm2 save

to make user in the db 

use database name (BrainStorm)

db.createUser({user: "username" , pwd: "password" , roles: [{ role: "root" , db: "admin"}]})

db.myCollection.createIndex({ "fieldName": "text" })

db.myCollection.getIndexes()


to get users 

db.getUsers()

to migrate database 

connect to the cloud db (mongo atlas) by the mongodbCompass

then exract the data of each collection in json format then scp it to the vm 

mongoimport --db BrainStorm --collection tournaments --file tournaments.json --jsonArray --username <your_username> --password <your_password>

username and password of the db

for SSL :

sudo apt install certbot python3-certbot-nginx
sudo certbot --nginx -d expogalaxy.com -d www.expogalaxy.com



general tips :
if there is  500 ubunto error and all confi are right go and see the logs of the nginx
tail -f /var/log/nginx/error.log

if the problem is from permission denied its eazy use this 
https://stackoverflow.com/questions/25774999/nginx-stat-failed-13-permission-denied

if you are using python script in the vps and module dont wanna install use pip3 not pip only 

if want the latest python version 
https://phoenixnap.com/kb/how-to-install-python-3-ubuntu


and for puppeteer use this 
https://stackoverflow.com/questions/59979188/error-failed-to-launch-the-browser-process-puppeteer
https://ploi.io/documentation/server/how-to-install-puppeteer-on-ubuntu
https://github.com/puppeteer/puppeteer/issues/5662#issuecomment-732076246

const browser = await puppeteer.launch({
      args: ['--no-sandbox'],
    });

